lag(c(1,2,3),k=2)
lag(c(1,2,3,4,5,6,7),k=2)
lag(c(1,2,3,4,5,6,7),k=3)
lag(c(1,2,3,4,5,6,7),k=5)
lag(c(1,2,3,4,5,6,7),k=8)
dplyr::lag(c(1,2,3,4,5,6,7),k=2)
dplyr::lag(c(1,2,3,4,5,6,7),k=3)
?dplyr::lag
dplyr::lag(c(1,2,3,4,5,6,7),2=3)
dplyr::lag(c(1,2,3,4,5,6,7)n2=3)
dplyr::lag(c(1,2,3,4,5,6,7),n=3)
df$Banking.orders..2.
c(NA,NA,NA,df$Banking.orders..2.)
?rollaply
??rollaply
x<-c(NA,NA,NA,df$Banking.orders..2.)
est.1$coef['intercept']
est.1$coef
zoo::rollapply(zoo(x),
width=3,
fun=function(w){est.1$coef['intercept'] + est.1$coef['ar1']*w[[1]]}
)
library(zoo)
zoo::rollapply(zoo(x),
width=3,
fun=function(w){est.1$coef['intercept'] + est.1$coef['ar1']*w[[1]]}
)
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){est.1$coef['intercept'] + est.1$coef['ar1']*w[[1]]}
)
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){est.1$coef['intercept'] + coalesce(est.1$coef['ar1']*w[[1]],0) }
)
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){est.1$coef['intercept'] + coalesce(est.1$coef['ar1']*w[[1]],0) }
)
?coalesce
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){est.1$coef['intercept'] + dplyr::coalesce(est.1$coef['ar1']*w[[1]],0) }
)
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){est.1$coef['intercept'] + dplyr::coalesce(est.1$coef['ar1']*w[1],0) }
)
x<-c(NA,NA,NA,df$Banking.orders..2.)
x
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){est.1$coef['intercept'] + dplyr::coalesce(est.1$coef['ar1']*w[1],0) }
)
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){est.1$coef['intercept'] + dplyr::coalesce(est.1$coef['ar1']*w[1],0) },
partial = FALSE
)
print(w)
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){#est.1$coef['intercept'] + dplyr::coalesce(est.1$coef['ar1']*w[1],0)
print(w)
},
partial = FALSE
)
print(w[1])
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){#est.1$coef['intercept'] + dplyr::coalesce(est.1$coef['ar1']*w[1],0)
print(w[1])
},
partial = FALSE
)
zoo(x)
print(dplyr::coalesce(est.1$coef['ar1']*w[1],0) )
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] + dplyr::coalesce(est.1$coef['ar1']*w[1],0)
print(dplyr::coalesce(est.1$coef['ar1']*w[1],0) )
},
partial = FALSE
)
est.1$coef['ar1']
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
},
partial = FALSE
)
est.1$coef['intercept']
zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
},
partial = FALSE
)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
},
partial = FALSE
)
y_pred
names(y_pred)
y_pred
y_pred[1]
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
y_pred
fitted(est.1)
est.1$coef['intercept']
est.1$coef['intercept']
est.1$coef['ar1']
dplyr::lag(c(1,2,3,4,5,6,7),n=3)
x<-c(NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
},
partial = FALSE
)
names(y_pred)
y_pred
y_pred
est.1$coef['intercept']
y_pred
est.1$coef['ar3']
est.1$coef['ar1']
est.1$coef['ar3']
est.1$coef['ar2']
est.1$coef['intercept']
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
x<-c(NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
},
partial = FALSE
)
y_pred
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
est.1$coef['ar3']
est.1$coef['ar2']
est.1$coef['ar1']
df$Banking.orders..2.
est.1$coef['intercept']
fitted(est.1)
est.1
df$Banking.orders..2.
est.1
df$Banking.orders..2.
fitted(est.1)
fitted(est.1)
df$Banking.orders..2.
fitted(est.1)
df$Banking.orders..2.
x<-c(NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
},
partial = FALSE
)
y_pred
x<-c(NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[1],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[3],0)
},
partial = FALSE
)
y_pred
est.1$coef['intercept']
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
fitted(est.1)
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
est.1
est.1
est.1
df$Banking.orders..2.
fitted(est.1)
df$Banking.orders..2.
fitted(est.1)
est.1$coef['intercept']
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
df$Banking.orders..2.
fitted(est.1)
len(fitted(est.1))
len(fitted(est.1))
length(fitted(est.1))
fitted(est.1)
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
est.1
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
fit
fit$var.pred
fit
fit$partialacf
fit
fit$asy.var.coef
fit$ar
est.1
est.1
fitted(est.1)
?ar
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[3],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[1],0)
},
partial = FALSE
)
y_pred
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
est.1
y_pred
fitted(est.1)-y_pred
fitted(est.1)
x<-fitted(est.1)
x<-as.vector(fitted(est.1))
x-y_pred
y_pred
y_pred<-as.vector(y_pred)
y_pred
x-y_pred
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
x<-as.vector(fitted(est.1))
x-y_pred
y_pred<-c(NA,as.vector(y_pred))
x<-c(NA,NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[3],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[1],0)
},
partial = FALSE
)
y_pred<-c(as.vector(y_pred))
x<-as.vector(fitted(est.1))
x-y_pred
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
x<-as.vector(fitted(est.1))
x-y_pred
est.1
?fitted
est.1
est.1$residuals
sum(est.1$residuals)
x-y_pred
est.1
est.1$residuals
mean(est.1$residuals)
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
x<-as.vector(fitted(est.1))
x-y_pred
x-y_pred
x<-as.vector(fitted(est.1))
x<-as.vector(fitted(est.1))
x-y_pred
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
x-y_pred
x
y_pred
x
x-
length(y_pred)
x-
length(y_pred)
length(x)
length(y_pred)
x[0:60]
x[0:60]-y_pred[0:60]
est.1$coef['intercept']
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
df$Banking.orders..2.
fitted(est.1)
x<-c(NA,NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[3],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[1],0)
},
partial = FALSE
)
y_pred<-c(as.vector(y_pred))
est.1$coef['intercept']
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
df$Banking.orders..2.
fitted(est.1)
x<-c(NA,NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[3],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[1],0)
},
partial = FALSE
)
y_pred<-c(as.vector(y_pred))
x<-c(NA,NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[3],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[1],0)
},
partial = FALSE
)
y_pred <- c(as.vector(y_pred))
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
x<-as.vector(fitted(est.1))
length(x)
length(y_pred)
x[0:60]-y_pred[0:60]
x[0:60]-y_pred[0:60]
est.1
est.1$coef['intercept']
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
x<-c(NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[3],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[1],0)
},
partial = FALSE
)
y_pred <- c(as.vector(y_pred))
y_pred
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
x<-as.vector(fitted(est.1))
x[0:60]-y_pred[0:60]
y_pred
df$Banking.orders..2.
est.1$coef['intercept']
est.1$coef['ar1']
est.1$coef['ar2']
est.1$coef['ar3']
x<-c(NA,NA,NA,df$Banking.orders..2.)
y_pred = zoo::rollapply(zoo(x),
width=3,
FUN=function(w){
est.1$coef['intercept'] +
dplyr::coalesce(est.1$coef['ar1']*w[3],0) +
dplyr::coalesce(est.1$coef['ar2']*w[2],0) +
dplyr::coalesce(est.1$coef['ar3']*w[1],0)
},
partial = FALSE
)
y_pred <- c(as.vector(y_pred))
plot(df$Banking.orders..2., type = 'l')
lines(fitted(est.1), col = 3, lwd = 2) ## use the forecast package
lines(y_pred, col = 4, lwd = 2) ## use the forecast package
x<-as.vector(fitted(est.1))
x[0:60]-y_pred[0:60]
acf(est.1$residuals)
est.1
est.1$coef['ar1']
?arima
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = T,
intercept = T)
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
est <- arima(x = df$Banking.orders..2.,order = c(3, 0, 0))
est
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
est
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
est
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/Users/lrabalski1/miniforge3/envs/everyday_use/bin/python")
myenvs=conda_list()
envname=myenvs$name[3]
use_condaenv(envname, required = TRUE)
reticulate::repl_python()
fit
est <- arima(x = df$Banking.orders..2.,order = c(3, 0, 0))
est
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
reticulate::repl_python()
est <- arima(x = df$Banking.orders..2.,order = c(3, 0, 0))
est
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
est <- arima(x = df$Banking.orders..2.,order = c(3, 0, 0))
est
ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
est2<-ar.ols(df$Banking.orders..2.,
order.max = 3,
demean = F,
intercept = T)
fit(est2)
?ar.ols
?arima
est
est <- arima(x = df$Banking.orders..2.,order = c(3, 0, 0))
reticulate::repl_python()
