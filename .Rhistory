library(reticulate)
myenvs=conda_list()
envname=myenvs$name[3]
use_condaenv(envname, required = TRUE)
#reticulate::py_config()
reticulate::repl_python()
library(reticulate)
myenvs=conda_list()
envname=myenvs$name[3]
use_condaenv(envname, required = TRUE)
Sys.setenv(RETICULATE_PYTHON = "/Users/lrabalski1/miniforge3/envs/everyday_use/bin/python")
reticulate::py_config()
reticulate::repl_python()
# Showing the plot after the simulations are finished
plt.show()
reticulate::repl_python()
# Averaging win probability and end balance
overall_win_probability = sum(win_probability)/len(win_probability)
reticulate::repl_python()
query<- readr::read_file('query/leady_tel.sql')
query
dbGetQuery(polaczenie_hurtownia_master, query)
#markdown ----
tabela<- function(df, caption){
DT::datatable(data = df,
extensions = 'Buttons',
caption = caption,
options = list(dom = "Blfrtip",pageLength = 10, lengthMenu = c(10, 25, 200),scrollX=TRUE, buttons = c('copy', 'csv', 'excel')
,columnDefs = list(list(className = 'dt-center',targets="_all"))
),
rownames = FALSE,
class = "display")
}
knitr::opts_chunk$set(#fig.width=12,
fig.height=4,
out.width = '100%'
)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message =FALSE,
include =FALSE)
options(scipen=999)
#plotly ----
#https://stackoverflow.com/questions/34093169/horizontal-vertical-line-in-plotly
vline <- function(x = 0, color = "blue", dash="dash") {
list(
type = "line",
y0 = 0,
y1 = 1,
yref = "paper", #(this puts the graph region on a 0-1 scale, rather than on the x/y data scale)
x0 = x,
x1 = x,
line = list(color = color, dash=dash)
)
}
hline <- function(y = 0, color = "blue") {
list(
type = "line",
x0 = 0,
x1 = 1,
xref = "paper", #(this puts the graph region on a 0-1 scale, rather than on the x/y data scale)
y0 = y,
y1 = y,
line = list(color = color)
)
}
library(DBI)
library(stringr)
library(stringi)
library(readr)
library(dplyr)
library(ggplot2)
library(RPostgreSQL)
library(readr)
library(data.table)
library(scales)
library(lubridate)
library(plotly)
#dla celow markdowna
library(kableExtra)
library(knitr)
library(DT)
setwd('/Users/lrabalski1/Desktop/Mrowisko/0_functions/')
setwd('/Users/lrabalski1/Desktop/Mrowisko/mrowisko_priv_git/artefakty/0_functions')
#markdown ----
tabela<- function(df, caption){
DT::datatable(data = df,
extensions = 'Buttons',
caption = caption,
options = list(dom = "Blfrtip",pageLength = 10, lengthMenu = c(10, 25, 200),scrollX=TRUE, buttons = c('copy', 'csv', 'excel')
,columnDefs = list(list(className = 'dt-center',targets="_all"))
),
rownames = FALSE,
class = "display")
}
knitr::opts_chunk$set(#fig.width=12,
fig.height=4,
out.width = '100%'
)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message =FALSE,
include =FALSE)
options(scipen=999)
#plotly ----
#https://stackoverflow.com/questions/34093169/horizontal-vertical-line-in-plotly
vline <- function(x = 0, color = "blue", dash="dash") {
list(
type = "line",
y0 = 0,
y1 = 1,
yref = "paper", #(this puts the graph region on a 0-1 scale, rather than on the x/y data scale)
x0 = x,
x1 = x,
line = list(color = color, dash=dash)
)
}
hline <- function(y = 0, color = "blue") {
list(
type = "line",
x0 = 0,
x1 = 1,
xref = "paper", #(this puts the graph region on a 0-1 scale, rather than on the x/y data scale)
y0 = y,
y1 = y,
line = list(color = color)
)
}
library(DBI)
library(stringr)
library(stringi)
library(readr)
library(dplyr)
library(ggplot2)
library(RPostgreSQL)
library(readr)
library(data.table)
library(scales)
library(lubridate)
library(plotly)
#dla celow markdowna
library(kableExtra)
library(knitr)
library(DT)
setwd('/Users/lrabalski1/Desktop/Mrowisko/mrowisko_priv_git/artefakty/0_functions')
source(knitr::purl("0_funkcje_konsultanci.Rmd", quiet=TRUE))
df <- dbGetQuery(polaczenie_hurtownia_master, query)
sum(duplicated(df$task_id))
View(df)
query<- readr::read_file('query/leady_tel.sql')
df <- dbGetQuery(polaczenie_hurtownia_master, query)
sum(duplicated(df$task_id))
query<- readr::read_file('query/leady_tel.sql')
df <- dbGetQuery(polaczenie_hurtownia_master, query)
sum(duplicated(df$task_id))
df1 <-df %>% filter(!duplicated(task_id))
View(df)
query<- readr::read_file('query/leady_tel.sql')
df <- dbGetQuery(polaczenie_hurtownia_master, query)
df1 <-df %>% filter(!duplicated(task_id))
View(df1)
df1 <-df %>% filter(!(task_id %in% (df %>% filter(duplicated(task_id)) %>% pull(task_id))))
View(df1)
df2 <- df1 %>% mutate(workd_sold = ifelse(worker_id==worker_id_sold,1,0))
View(df2)
df2 <- df1 %>% mutate(workd_sold = ifelse(worker_id==worker_id_sold,1,NA))
View(df2)
query<- readr::read_file('query/leady_tel.sql')
df <- dbGetQuery(polaczenie_hurtownia_master, query)
#nie wiem czym są duplikaty wiec wykluczam
df1 <-df %>% filter(!(task_id %in% (df %>% filter(duplicated(task_id)) %>% pull(task_id))))
df2 <- df1 %>% mutate(workd_sold = ifelse(worker_id==worker_id_sold,1,NA))
df2 %>% group_by()
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA))
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_with_order=ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0))
View(df2)
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0))
View(df2)
View(df2)
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_first_contact=difftime(created_at,data_wprowadzenia_ticket, units = "seconds")
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0))
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_first_contact=difftime(created_at,data_wprowadzenia_ticket, units = "seconds"),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0))
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_first_contact=difftime(created_at,data_wprowadzenia_ticket, units = "secs"),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0))
View(df2)
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0))
View(df2)
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')))
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')),
task_type=factor(task_type)
)
View(df2)
df2 %>% group_by(task_type) %>% summarise(n=n())
View(df2)
query<- readr::read_file('query/leady_tel.sql')
df <- dbGetQuery(polaczenie_hurtownia_master, query)
#nie wiem czym są duplikaty wiec wykluczam
df1 <-df %>% filter(!(task_id %in% (df %>% filter(duplicated(task_id)) %>% pull(task_id))))
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,NA),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')),
task_type=factor(task_type)
)
df2 %>% group_by(task_type) %>% summarise(n=n())
df2 %>% group_by(task_type) %>% summarise(n=n(),
leadow=n_distinct(task_id))
df2 %>% group_by(task_type) %>% summarise(leadow=n_distinct(task_id))
View(df2)
View(df2)
df2 %>% group_by(task_type) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
df2 <- df1 %>% mutate(task_worker_sold = ifelse(worker_id==worker_id_sold,1,0),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')),
task_type=factor(task_type)
)
View(df2)
df2 <- df1 %>% mutate(task_worker_sold = coalesce(ifelse(worker_id==worker_id_sold,1,0),0),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')),
task_type=factor(task_type)
)
View(df2)
df2 %>% group_by(task_type) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
df2 <- df1 %>% mutate(task_worker_sold = coalesce(ifelse(worker_id==worker_id_sold,1,0),0),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')),
task_type=factor(task_type)
) %>%
mutate(seniority=factor(case_when(between(seniority_continous,0,6*30)~'0.0_0.5',
between(seniority_continous,6*30,12*30)~'0.5_1.0',
between(seniority_continous,12*30,24*30)~'1.0_2.0',
seniority_continous> 24*30 ~ '2.0 +'), levels=c('0.0_0.5','0.5_1.0','1.0_2.0','2.0 +')))
df2 %>% group_by(task_type,seniority) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
query<- readr::read_file('query/leady_tel.sql')
df <- dbGetQuery(polaczenie_hurtownia_master, query)
#nie wiem czym są duplikaty wiec wykluczam
df1 <-df %>% filter(!(task_id %in% (df %>% filter(duplicated(task_id)) %>% pull(task_id))))
df2 <- df1 %>% mutate(task_worker_sold = coalesce(ifelse(worker_id==worker_id_sold,1,0),0),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')),
task_type=factor(task_type)
) %>%
mutate(seniority=factor(case_when(between(seniority_continous,0,6*30)~'0.0_0.5',
between(seniority_continous,6*30,12*30)~'0.5_1.0',
between(seniority_continous,12*30,24*30)~'1.0_2.0',
seniority_continous> 24*30 ~ '2.0 +'), levels=c('0.0_0.5','0.5_1.0','1.0_2.0','2.0 +')))
df2 %>% group_by(task_type,seniority) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
df3 <- df2 %>% group_by(task_type,seniority) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
View(df3)
View(df3)
df3 %>%
ggplot(x=seniority, y=c2) +
geom_col(position = position_dodge(0.9))
df3 %>%
ggplot(aes(x=seniority, y=c2)) +
geom_col(position = position_dodge(0.9))
View(df3)
df3 %>%
ggplot(aes(x=seniority, y=c2, fill=task_type)) +
geom_col(position = position_dodge(0.9))
df3 %>%
ggplot(aes(x=task_type, y=c2, fill=seniority)) +
geom_col(position = position_dodge(0.9))
df3
df3 %>%
ggplot(aes(x=task_type, y=c2, fill=seniority)) +
geom_col(position = position_dodge(0.9))
View(df2)
View(df3)
query<- readr::read_file('query/leady_tel.sql')
df <- dbGetQuery(polaczenie_hurtownia_master, query)
#nie wiem czym są duplikaty wiec wykluczam
df1 <-df %>% filter(!(task_id %in% (df %>% filter(duplicated(task_id)) %>% pull(task_id))))
df2 <- df1 %>% mutate(task_worker_sold = coalesce(ifelse(worker_id==worker_id_sold,1,0),0),
task_first_contact=ifelse(difftime(created_at,data_wprowadzenia_ticket, units = "secs") < 30, 1,0),
task_with_order=coalesce(ifelse(created_at>=data_pierwszej_rezerwacji_na_tickecie,1,0),0),
task_type=ifelse(task_first_contact==1,'1.task_first_contact',
ifelse(task_with_order==1,'3.task_with_order','2. task next contact')),
task_type=factor(task_type)
) %>%
mutate(seniority=factor(case_when(between(seniority_continous,0,6*30)~'0.0_0.5',
between(seniority_continous,6*30,12*30)~'0.5_1.0',
between(seniority_continous,12*30,24*30)~'1.0_2.0',
seniority_continous> 24*30 ~ '2.0 +'), levels=c('0.0_0.5','0.5_1.0','1.0_2.0','2.0 +')))
df3 <- df2 %>% group_by(task_type,seniority) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
df3 %>%
ggplot(aes(x=task_type, y=c2, fill=seniority)) +
geom_col(position = position_dodge(0.9))
df4 <- df2 %>% group_by(task_type,kanal,seniority) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
df4 <- df2 %>% group_by(task_type,ticket_kanal,seniority) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold))
View(df4)
df4 <- df2 %>% group_by(task_type,ticket_kanal,seniority) %>% summarise(leadow=n_distinct(task_id),
c2=mean(task_worker_sold)) %>% filter(leadow>100)
df4 %>%
ggplot(aes(x=task_type, y=c2, fill=seniority)) +
geom_col(position = position_dodge(0.9))+
facet_grid(ticket_kanal~.)
df3 %>%
ggplot(aes(x=task_type, y=c2, fill=seniority)) +
geom_col(position = position_dodge(0.9))
View(df4)
library(reticulate)
myenvs=conda_list()
envname=myenvs$name[3]
Sys.setenv(RETICULATE_PYTHON = "/Users/lrabalski1/miniforge3/envs/everyday_use/bin/python")
use_condaenv(envname, required = TRUE)
reticulate::py_config()
reticulate::repl_python()
library(reticulate)
myenvs=conda_list()
envname=myenvs$name[3]
Sys.setenv(RETICULATE_PYTHON = "/Users/lrabalski1/miniforge3/envs/everyday_use/bin/python")
use_condaenv(envname, required = TRUE)
reticulate::py_config()
reticulate::repl_python()
reticulate::repl_python()
